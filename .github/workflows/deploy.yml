name: Deploy to Google Cloud VM with Docker

on:
  push:
    branches:
      - master
    paths-ignore:
      - README.md
      - .gitignore
  pull_request_target:
    branches:
      - master
    types:
      - closed

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Docker Hub Authentication
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:latest .

      - name: Tag Docker Image
        run: docker tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:latest ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:latest

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Set up Cloud CLI
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCE_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true

      - name: Access gcloud CLI
        run: |
          gcloud auth configure-docker

      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Copy docker-compose.yml into GCP Instance
      #   uses: garygrossgarten/github-action-scp@release
      #   with:
      #     local: docker-compose.yml
      #     remote: /home/${{ secrets.GCP_USER }}/docker-compose.yml
      #     host: ${{ secrets.GCP_VM_IP }}
      #     username: ${{ secrets.GCP_USER }}
      #     privateKey: ${{ secrets.GCP_SSH_PRIVATE_KEY }}

      - name: SSH into GCP and Run Docker Container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_USER }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          script: |
            cat > /home/${{ secrets.GCP_USER }}/env. <<EOF
            DATABASE_URL="postgresql://postgres:iqbalpahlevi@database:5432/movies_catalog?schema=public"
            EOF
            cat > /home/${{ secrets.GCP_USER }}/docker-compose.yml <<EOF
            version: '3.8'
            services:
              database:
                image: postgres:latest
                environment:
                  POSTGRES_DB: movies_catalog
                  POSTGRES_USER: postgres
                  POSTGRES_PASSWORD: iqbalpahlevi
                ports:
                  - '5432:5432'
                volumes:
                  - database:/var/lib/postgresql/data
              backend:
                build: .
                image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:latest
                ports:
                  - '3000:3000'
                depends_on:
                  - database
                env_file:
                  - .env
            volumes:
              database:
                name: movies-catalog-db
            EOF
            docker compose -f /home/${{ secrets.GCP_USER }}/docker-compose.yml down
            docker compose -f /home/${{ secrets.GCP_USER }}/docker-compose.yml up --pull always -d
            docker image prune -f -a